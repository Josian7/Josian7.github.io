<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Greenplum 部署</title>
      <link href="/2022/08/11/greenplum/"/>
      <url>/2022/08/11/greenplum/</url>
      
        <content type="html"><![CDATA[<h1 id="Greenplum-单机安装"><a href="#Greenplum-单机安装" class="headerlink" title="Greenplum 单机安装"></a>Greenplum 单机安装</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>安装环境：Centos7</p><table><thead><tr><th>配置</th><th>详情</th></tr></thead><tbody><tr><td>系统</td><td>Linux.el7.x86_64</td></tr><tr><td>内存</td><td>&gt;= 4G ；建议8G</td></tr><tr><td>Greenplum安装包</td><td>greenplum-db-6.19.2-rhel7-x86_64.rpm</td></tr></tbody></table><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p>安装包官网下载地址：<a href="https://network.pivotal.io/products/vmware-tanzu-greenplum#/releases/449820/file_groups/2047">Download VMware Tanzu™ Greenplum®</a></p><p>版本选择：</p><div align=left><img src="https://gitee.com/Josian/chart07/raw/master/gp-down_version-2022-8-1110:43:56.jpg" style="zoom:65%;" /></div>![123](https://img-blog.csdnimg.cn/bd442180f705489aa37b2f15af586f9a.png)<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre class=" language-sh"><code class="language-sh">yum install apr apr-util bash bzip2 curl krb5 libcurl libevent libxml2 libyaml zlib openldap openssh openssl openssl-libs perl readline rsync R sed tar zip</code></pre><h2 id="准备基本环境"><a href="#准备基本环境" class="headerlink" title="准备基本环境"></a>准备基本环境</h2><p>1.关闭防火墙</p><pre class=" language-shell"><code class="language-shell">#停止防火墙服务systemctl stop firewalld.service#禁止开机启动systemctl display firewalld.service</code></pre><p>2.添加系统配置，使用<code>vi /etc/sysctl.conf</code>命令编辑</p><pre class=" language-shell"><code class="language-shell">net.ipv4.ip_forward = 0net.ipv4.conf.default.accept_source_route = 0kernel.sysrq = 1kernel.core_uses_pid = 1net.ipv4.tcp_syncookies = 1kernel.msgmnb = 65536kernel.msgmax = 65536kernel.sem = 250 64000 100 512kernel.shmmax = 810810728448 # kernel.shmmax = kernel.shmall * PAGE_SIZE kernel.shmmni = 4096kernel.shmall = 197951838    #kernel.shmall = _PHYS_PAGES / 2 # See Shared Memory Pagesnet.ipv4.tcp_tw_recycle = 1net.ipv4.tcp_max_syn_backlog = 4096net.core.netdev_max_backlog = 10000vm.overcommit_memory = 2net.ipv4.conf.all.arp_filter = 1</code></pre><p>官方配置</p><pre class=" language-shell"><code class="language-shell">#官方配置：# kernel.shmall = _PHYS_PAGES / 2 # See Shared Memory Pageskernel.shmall = 197951838# kernel.shmmax = kernel.shmall * PAGE_SIZE kernel.shmmax = 810810728448kernel.shmmni = 4096vm.overcommit_memory = 2 # See Segment Host Memoryvm.overcommit_ratio = 95 # See Segment Host Memorynet.ipv4.ip_local_port_range = 10000 65535 # See Port Settingskernel.sem = 500 2048000 200 4096kernel.sysrq = 1kernel.core_uses_pid = 1kernel.msgmnb = 65536kernel.msgmax = 65536kernel.msgmni = 2048net.ipv4.tcp_syncookies = 1net.ipv4.conf.default.accept_source_route = 0net.ipv4.tcp_max_syn_backlog = 4096net.ipv4.conf.all.arp_filter = 1net.core.netdev_max_backlog = 10000net.core.rmem_max = 2097152net.core.wmem_max = 2097152vm.swappiness = 10vm.zone_reclaim_mode = 0vm.dirty_expire_centisecs = 500vm.dirty_writeback_centisecs = 100vm.dirty_background_ratio = 0 # See System Memoryvm.dirty_ratio = 0vm.dirty_background_bytes = 1610612736vm.dirty_bytes = 4294967296</code></pre><p>刷新配置</p><pre><code>sysctl -p</code></pre><p>3.系统资源限制配置，执行<code>vi /etc/security/limits.conf</code>命令添加以下内容</p><pre class=" language-shell"><code class="language-shell">* soft nofile 65536* hard nofile 65536* soft nproc 131072* hard nproc 131072 </code></pre><p>4.创建pgadmin用户</p><pre class=" language-shell"><code class="language-shell">groupadd gpadminuseradd gpadmin -r -m -g gpadminpasswd #此处输入密码</code></pre><p>5.配置免密登录（因为在安装时需要频繁输入密码）</p><pre class=" language-shell"><code class="language-shell">su gpadmincd  #进入用户home目录ssh-keygen -t rsa #生成密码，无需输入任何密码，连续回车即可cat .ssh/id_rsa.pub >> ~/.ssh/authorized_keys #检查是否添加成功cat ~/.ssh/authorized_keys</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class=" language-shell"><code class="language-shell">#切换至root用户su root#切换到安装包所在目录（安装包上传位置）cd /opt#执行安装命令：yum install greenplum-db-6.19.2-rhel7-x86_64.rpm</code></pre><h2 id="配置及数据库初始化"><a href="#配置及数据库初始化" class="headerlink" title="配置及数据库初始化"></a>配置及数据库初始化</h2><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>1.对数据库安装目录执行用户权限设置：</p><pre class=" language-shell"><code class="language-shell">chown -R gpadmin:gpadmin /usr/local/greenplum*</code></pre><p>2.在当前bash环境下读取并执行数据库目录下的greenplum_path.sh文件：</p><pre class=" language-shell"><code class="language-shell"> source /usr/local/greenplum-db-6.19.2/greenplum_path.sh</code></pre><p>3.创建数据库目录并对gpadmin进行授权：</p><pre class=" language-shell"><code class="language-shell">#创建目录mkdir /data/&#123;gp1,gp2,master&#125;#目录授权chown -R gpadmin:gpadmin /data/&#123;gp1,gp2,master&#125;</code></pre><h3 id="配置服务器地址"><a href="#配置服务器地址" class="headerlink" title="配置服务器地址"></a>配置服务器地址</h3><pre class=" language-shell"><code class="language-shell">mkdir  /home/gpadmin/gpconfigscd /home/gpadmin/gpconfigs#创建文件配置文件,并输入本机ipecho '192.168.x.x'  >> hostfile_exkeys && cat hostfile_exkeysecho '192.168.x.x'  >> hostfile_gpinitsystem && cat hostfile_gpinitsystem#文件授权chown -R gpadmin:gpadmin /home/gpadmin/gpconfigs</code></pre><h3 id="配置用户环境变量"><a href="#配置用户环境变量" class="headerlink" title="配置用户环境变量"></a>配置用户环境变量</h3><p>修改gpadmin用户的环境变量</p><pre class=" language-shell"><code class="language-shell">#切换到gpadmin用户su  gpadmincd #编辑文件.bash_profilevi .bash_profile#添加以下内容source /usr/local/greenplum-db-6.13.0/greenplum_path.shexport MASTER_DATA_DIRECTORY=/data/master/gpseg-1MASTER_HOSTNAME=localhostexport PGPORT=5432export PGUSER=gpadminexport PGDATABASE=hdw #保存后刷新执行source /home/gpadmin/.bash_profile#继续编辑配置文件vi .bashrcsource /usr/local/greenplum-db-6.19.2/greenplum_path.shexport MASTER_DATA_DIRECTORY=/data/master/gpseg-1export PGPORT=5432export PGUSER=gpadminexport PGDATABASE=hdw#保存后执行source /home/gpadmin/.bashrc#执行gpssh同步时间（单机部署好像没必要，没试过）gpssh-exkeys -f /home/gpadmin/gpconfigs/hostfile_exkeys</code></pre><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>复制数据库配置文件</p><pre class=" language-shell"><code class="language-shell">#拷贝文件cp /usr/local/greenplum-db-6.19.2/docs/cli_help/gpconfigs/gpinitsystem_config  /home/gpadmin/gpconfigs</code></pre><p>修改参数</p><pre class=" language-shell"><code class="language-shell">vi /home/gpadmin/gpconfigs/gpinitsystem_config#配置数据目录PORT_BASE=6500declare -a DATA_DIRECTORY=(/data/gp1 /data/gp2)#配置主机名称MASTER_HOSTNAME=localhost#配置数据库名称DATABASE_NAME=hdw#配置集群列表MACHINE_LIST_FILE=/home/gpadmin/gpconfigs/hostfile_gpinitsystem</code></pre><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><pre class=" language-shell"><code class="language-shell">#初始化数据库gpinitsystem -c /home/gpadmin/gpconfigs/gpinitsystem_config#命令中间会有个确认，输入Y就行Continue with Greenplum creation Yy/Nn>   Y</code></pre><blockquote><p>如果还有其他的yes/no的提示，选择yes，如果提示输入密码，那就是你的ssh免密登录配置失败，就直接输入密码（会输入很多次），如果嫌弃繁琐，那就重新配置一下上面的免密登录。</p><p>初始化结束以后，数据库就在5432端口启动了，大功告成。</p></blockquote><h3 id="配置远程登录数据库"><a href="#配置远程登录数据库" class="headerlink" title="配置远程登录数据库"></a>配置远程登录数据库</h3><pre class=" language-shell"><code class="language-shell">#此处使用root用户进行编辑su rootvi /data/master/gpseg-1/pg_hba.conf#输入以下内容host    all    all     0.0.0.0/0    md5#注：最后一个如果是md5，表示密码登录，trust 表示免密登录#配置完成后可以navcat连接greenplum数据库，或者其他连接工具，连接方法不再详情描述#本机登录psql  -h 127.0.0.1 -p 5432 -U gpadmin#列出所有数据库hdw=# \l#退出hdw=# \q</code></pre></br><blockquote><p>本文转自网络文章，转载此文章仅为个人收藏，分享知识，如有侵权，请联系。</p><p>原作者：<a href="https://blog.csdn.net/u011561335">冰夏之夜影</a>  原文链接：<a href="https://blog.csdn.net/u011561335/article/details/121889849">https://blog.csdn.net/u011561335/article/details/121889849</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> greenplum </category>
          
      </categories>
      
      
        <tags>
            
            <tag> greenplum </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>emqtt-bench 工具</title>
      <link href="/2022/08/03/emqtt-bench/"/>
      <url>/2022/08/03/emqtt-bench/</url>
      
        <content type="html"><![CDATA[<h2 id="emqtt-bench安装"><a href="#emqtt-bench安装" class="headerlink" title="emqtt-bench安装"></a>emqtt-bench安装</h2><p>安装环境：Centos7</p><p>安装包：<a href="https://github.com/emqx/emqtt-bench/releases/download/0.4.6-alpha.2/emqtt-bench-0.4.6-alpha.2-centos7-amd64.tar.gz">emqtt-bench-0.4.6-alpha.2-centos7-amd64.tar.gz</a></p><p>建议使用已编译好的发行包进行安装，源码编译已踩坑。</p><pre class=" language-sh"><code class="language-sh"># 创建存放目录并解压[root@testHost]# mkdir /usr/local/emqtt-bench/[root@testHost]# tar -zxvf emqtt-bench-0.4.6-alpha.2-centos7-amd64.tar.gz \                 -C /usr/local/emqtt-bench/# 添加环境变量[root@testHost]# echo 'export PATH=$PATH:/usr/local/emqtt-bench/bin' >> /etc/profile[root@testHost]# source /etc/profile</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>emqtt_bench</code> 共三个子命令：</p><ol><li><p><code>pub</code>：用于创建大量客户端执行发布消息的操作。</p></li><li><p><code>sub</code>：用于创建大量客户端执行订阅主题，并接受消息的操作。</p></li><li><p><code>conn</code>：用于创建大量的连接。</p></li></ol><p>执行 <code>emqtt_bench pub --help</code> 会得到可用的参数输出</p><table><thead><tr><th>参数</th><th>简写</th><th>可选值</th><th>默认值</th><th align="left">说明</th></tr></thead><tbody><tr><td>–host</td><td>-h</td><td>-</td><td>localhost</td><td align="left">要连接的 MQTT 服务器地址</td></tr><tr><td>–port</td><td>-p</td><td>-</td><td>1883</td><td align="left">MQTT 服务端口</td></tr><tr><td>–version</td><td>-V</td><td>3 4 5</td><td>5</td><td align="left">使用的 MQTT 协议版本</td></tr><tr><td>–count</td><td>-c</td><td>-</td><td>200</td><td align="left">客户端总数</td></tr><tr><td>–startnumber</td><td>-n</td><td>-</td><td>0</td><td align="left">客户端数量起始值</td></tr><tr><td>–interval</td><td>-i</td><td>-</td><td>10</td><td align="left">每间隔多少时间创建一个客户端；单位：毫秒</td></tr><tr><td>–interval_of_msg</td><td>-I</td><td>-</td><td>1000</td><td align="left">每间隔多少时间发送一个消息</td></tr><tr><td>–username</td><td>-u</td><td>-</td><td>无；非必选</td><td align="left">客户端用户名</td></tr><tr><td>–password</td><td>-P</td><td>-</td><td>无；非必选</td><td align="left">客户端密码</td></tr><tr><td>–topic</td><td>-t</td><td>-</td><td>无；必选</td><td align="left">发布的主题；支持站位符： <code>%c</code>：表示 ClientId <code>%u</code>：表示 Username <code>%i</code>：表示客户端的序列数</td></tr><tr><td>–szie</td><td>-s</td><td>-</td><td>256</td><td align="left">消息 Payload 的大小；单位：字节</td></tr><tr><td>–qos</td><td>-q</td><td>-</td><td>0</td><td align="left">Qos 等级</td></tr><tr><td>–retain</td><td>-r</td><td>true false</td><td>false</td><td align="left">消息是否设置 Retain 标志</td></tr><tr><td>–keepalive</td><td>-k</td><td>-</td><td>300</td><td align="left">客户端心跳时间</td></tr><tr><td>–clean</td><td>-C</td><td>true false</td><td>true</td><td align="left">是否以清除会话的方式建立连接</td></tr><tr><td>–ssl</td><td>-S</td><td>true false</td><td>false</td><td align="left">是否启用 SSL</td></tr><tr><td>–certfile</td><td>-</td><td>-</td><td>无</td><td align="left">客户端 SSL 证书</td></tr><tr><td>–keyfile</td><td>-</td><td>-</td><td>无</td><td align="left">客户端 SSL 秘钥文件</td></tr><tr><td>–ws</td><td>-</td><td>true false</td><td>false</td><td align="left">是否以 Websocket 的方式建立连接</td></tr><tr><td>–ifaddr</td><td>-</td><td>-</td><td>无</td><td align="left">指定客户端连接使用的本地网卡</td></tr></tbody></table><br/><p>例如，启动 10 个连接，分别每秒向主题 <code>t</code> 发送 100 条 Qos0 消息，其中每个消息体的大小为 <code>16</code> 字节大小：</p><pre class=" language-sh"><code class="language-sh">emqtt_bench pub   -t t -h 192.168.0.1 -p 1883 -s 16 -q 0 -c 10 -I 10 \--username admin --password 123</code></pre><br/><p>使用方法参考emqx官方文档：<a href="https://docs.emqx.com/zh/enterprise/v4.4/tutorial/benchmark.html">https://docs.emqx.com/zh/enterprise/v4.4/tutorial/benchmark.html</a></p><blockquote><p><a href="https://github.com/emqx/emqtt-bench/releases">emqtt-bench 发行包下载</a></p><p><a href="https://github.com/emqx/emqtt-bench">emqtt-bench 源码地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> emqx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emqx </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
